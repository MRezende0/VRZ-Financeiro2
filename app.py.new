import streamlit as st
import pandas as pd

# Importar módulos de utilidades
from utils.ssl_patch import patch_ssl
from utils.styling import setup_page_config, local_css

# Importar módulos de autenticação
from modules.auth.login import login_screen

# Importar módulos de páginas
from modules.pages.dashboard import dashboard
from modules.pages.transacoes import registrar
from modules.pages.projetos import projetos
from modules.pages.funcionarios import funcionarios
from modules.pages.relatorios import relatorios

# Importar módulos de dados
from modules.data.sheets import carregar_dados_iniciais, carregar_dados_background

# Aplicar patch SSL para resolver problemas de certificado
patch_ssl()

# Configuração inicial da página
setup_page_config()

# Aplicar estilos personalizados
local_css()

# Inicialização dos dados locais
if 'local_data' not in st.session_state:
    st.session_state.local_data = {
        'receitas': pd.DataFrame(),
        'despesas': pd.DataFrame(),
        'projetos': pd.DataFrame(),
        'clientes': pd.DataFrame(),
        'categorias_receitas': pd.DataFrame(),
        'categorias_despesas': pd.DataFrame(),
        'fornecedor_despesas': pd.DataFrame(),
        'funcionarios': pd.DataFrame()
    }

# Cache para a planilha
if 'spreadsheet' not in st.session_state:
    st.session_state.spreadsheet = None

# Cache para as worksheets
if 'worksheets_cache' not in st.session_state:
    st.session_state.worksheets_cache = {}

def main_app():
    """
    Função principal que gerencia a navegação entre as diferentes páginas da aplicação.
    """
    st.sidebar.image("imagens/logo-cocal.png")
    st.sidebar.title("Menu")
    menu_option = st.sidebar.radio(
        "Selecione a funcionalidade:",
        ("Dashboard", "Registrar", "Projetos", "Funcionários", "Relatórios")
    )

    # Botão "Sair" na parte inferior da sidebar
    st.sidebar.markdown("---")  # Linha separadora
    if st.sidebar.button("Sair", key="sair"):
        st.session_state["logged_in"] = False
        st.success("Você saiu do sistema.")
        st.rerun()  # Atualiza a página para voltar à tela de login

    if menu_option == "Dashboard":
        dashboard()
    elif menu_option == "Registrar":
        registrar()
    elif menu_option == "Projetos":
        projetos()
    elif menu_option == "Funcionários":
        funcionarios()
    elif menu_option == "Relatórios":
        relatorios()

if __name__ == "__main__":
    if "logged_in" not in st.session_state:
        st.session_state["logged_in"] = False
    
    # Verificar se precisamos carregar dados após o login
    if st.session_state.get("carregar_dados_apos_login", False) and not st.session_state.get("dados_carregados", False):
        # Iniciar carregamento em segundo plano sem bloquear a interface
        carregar_dados_iniciais()
        # Limpar a flag
        st.session_state.carregar_dados_apos_login = False

    if st.session_state["logged_in"]:
        main_app()
    else:
        login_screen()
